
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import org.json.JSONObject;

public class CourseSearch extends java.awt.Frame {
    public CourseSearch() {
        initComponents();
        setSize(500,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        button1 = new java.awt.Button();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        textField2 = new java.awt.TextField();
        textField3 = new java.awt.TextField();
        textField4 = new java.awt.TextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(null);

        label1.setText("Code");
        add(label1);
        label1.setBounds(100, 60, 34, 20);
        add(textField1);
        textField1.setBounds(180, 60, 100, 20);

        button1.setLabel("Search");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        add(button1);
        button1.setBounds(310, 60, 55, 24);

        label2.setText("Title");
        add(label2);
        label2.setBounds(100, 100, 27, 20);

        label3.setText("Subject");
        add(label3);
        label3.setBounds(100, 140, 60, 20);

        label4.setText("Fees");
        add(label4);
        label4.setBounds(100, 180, 32, 20);
        add(textField2);
        textField2.setBounds(180, 100, 100, 20);
        add(textField3);
        textField3.setBounds(180, 140, 100, 20);
        add(textField4);
        textField4.setBounds(180, 180, 100, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        
        String id=textField1.getText();
        try{
        String endPoint="http://localhost:8086/REST-Demo-230/course/json/"+id;
        URL url=new URL(endPoint);
        URLConnection ucon=url.openConnection();
        
        InputStream inputStream=ucon.getInputStream();
        //InputStream is ByteBasedSteam
        //Using InputStreamReader we are converting ByteBased to CharacterBased
        InputStreamReader reader=new InputStreamReader(inputStream);
        //We are creating BufferedReader object to read line-by-line
        BufferedReader br=new BufferedReader(reader);

        StringBuffer sb=new StringBuffer();
        
        while(true){
            String line=br.readLine();
            if(line==null)break;
            sb.append(line);
        }
        
        String data=sb.toString();
        System.out.println(data);
        System.out.println("Parsing JSON String");
        JSONObject json=new JSONObject(data);
        String code=json.getString("code");
        String title=json.getString("title");
        String subject=json.getString("subject");
        JSONObject infoJson=json.getJSONObject("einfo");
        String ecode=infoJson.getString("ecode");
        String etitle=infoJson.getString("etitle");
        int ecost=infoJson.getInt("cost");
        int fees=json.getInt("fees");
        textField2.setText(title);
        textField3.setText(subject);
        textField4.setText(""+fees);
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
        
        
        
        
    }//GEN-LAST:event_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseSearch().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    // End of variables declaration//GEN-END:variables
}
